
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCNaverMapSpec/EventEmitters.h>


namespace facebook::react {

void RNCNaverMapCircleEventEmitter::onTapOverlay(OnTapOverlay $event) const {
  dispatchEvent("tapOverlay", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapMarkerEventEmitter::onTapOverlay(OnTapOverlay $event) const {
  dispatchEvent("tapOverlay", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapPathEventEmitter::onTapOverlay(OnTapOverlay $event) const {
  dispatchEvent("tapOverlay", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapPolygonEventEmitter::onTapOverlay(OnTapOverlay $event) const {
  dispatchEvent("tapOverlay", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapPolylineEventEmitter::onTapOverlay(OnTapOverlay $event) const {
  dispatchEvent("tapOverlay", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapViewEventEmitter::onInitialized(OnInitialized $event) const {
  dispatchEvent("initialized", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapViewEventEmitter::onOptionChanged(OnOptionChanged $event) const {
  dispatchEvent("optionChanged", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}


void RNCNaverMapViewEventEmitter::onCameraChanged(OnCameraChanged $event) const {
  dispatchEvent("cameraChanged", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "latitude", $event.latitude);
$payload.setProperty(runtime, "longitude", $event.longitude);
$payload.setProperty(runtime, "zoom", $event.zoom);
$payload.setProperty(runtime, "tilt", $event.tilt);
$payload.setProperty(runtime, "bearing", $event.bearing);
$payload.setProperty(runtime, "reason", $event.reason);
    return $payload;
  });
}


void RNCNaverMapViewEventEmitter::onTapMap(OnTapMap $event) const {
  dispatchEvent("tapMap", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "latitude", $event.latitude);
$payload.setProperty(runtime, "longitude", $event.longitude);
$payload.setProperty(runtime, "x", $event.x);
$payload.setProperty(runtime, "y", $event.y);
    return $payload;
  });
}

} // namespace facebook::react
